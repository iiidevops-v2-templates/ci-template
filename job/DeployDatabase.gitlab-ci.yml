Deploy--Prepare database value:
  image:
    name:  alpine:3.17
    entrypoint: [ "" ]
  stage: deploy
  inherit:
    default: false
  script:
    - echo "This job is for prepare database value, modify this job if you want to customize the database value."
    - |
      cat <<EOF >value.yaml
      # Template From iiidevops-db-chart/values.yaml
      db:
        gui: true
        type: "mysql"
        username: "bear"
        password: "bearbearbear"
        name: "bearDB"
        tag: "latest"
      EOF
  cache:
    paths:
      - value.yaml
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /.*\(store\)$/
      when: never
    - if: '$CI_COMMIT_BRANCH =~ $III_DEPLOY_DB'
      when: on_success

Deploy--Database:
  stage: deploy
  extends:
    - .default
  variables:
    iiidevops: deploy
    CHART_NAME: "${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}-db"
    CHART_DB_GUI: "true"
    CHART_DB_NAME: "todo_db"
    CHART_DB_USERNAME: "iiidevops"
    CHART_DB_PASSWORD: "DevOps_123"
    CHART_DB_TAG: "13"
    CHART_DB_TYPE: "postgresql"
    CHART_VOLUME_ENABLED: "false"
    CHART_VERSION: "1.0.3"
  needs:
    - "Deploy--Prepare database value"
  cache:
    paths:
      - value.yaml
    policy: pull
  script:
    - helm uninstall -n ${CI_PROJECT_NAME} ${CHART_NAME} --cascade orphan || exit_code=$?
    - helm install -n ${CI_PROJECT_NAME} ${CHART_NAME} -f common.yaml -f value.yaml
      ${HARBOR_CHART_REGISTRY}/db
      --set db.gui=${CHART_DB_GUI}
      --set db.name=${CHART_DB_NAME}
      --set db.password=${CHART_DB_PASSWORD}
      --set db.tag=${CHART_DB_TAG}
      --set db.type=${CHART_DB_TYPE}
      --set db.username=${CHART_DB_USERNAME}
      --set persistence.enabled=${CHART_VOLUME_ENABLED}
      --set resources.requests.cpu=100m 
      --set resources.requests.memory=100Mi 
      --version ${CHART_VERSION}
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /.*\(store\)$/
      when: never
    - if: '$CI_COMMIT_BRANCH =~ $III_DEPLOY_DB'
      when: on_success

Deploy--Wait DB deployment:
  stage: deploy
  extends:
    - .default
  image:
    name: iiiorg/iiidevops-cli:0.0.7
    entrypoint: [ "" ]
  variables:
    iiidevops: deploy
    max_wait: 128
    namespace: ${CI_PROJECT_NAME}
    deploy_name: ${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}-db
  needs:
    - "Deploy--Database"
  script:
    - >
      kubectl create secret docker-registry harbor-local -n ${CI_PROJECT_NAME}
      --docker-server=${HARBOR_URL}
      --docker-username=${HARBOR_ROBOT}
      --docker-password=${HARBOR_ROBOT_SECRET} || true
    - deploy-wait.pl
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /.*\(store\)$/
      when: never
    - if: '$CI_COMMIT_BRANCH =~ $III_DEPLOY_DB'
      when: on_success
